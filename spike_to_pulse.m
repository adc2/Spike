function pulse_train=spike_to_pulse(spikes,sr,kernel)%y=spike_to_pulse(spikes,sr,kernel) - convert spike times to pulses%%  y: time series of pulses%%  spikes: spike times (s)%  sr: sampling rate (Hz)%  kernel: pulse shape function (default: []);% % spike toolboxif nargin==0; testcode; return; endif nargin<2; error('!'); endif nargin<3; kernel=[]; end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%N=ceil(max(spikes)*sr);pulse_train=zeros(N,1);for iSpike=1:numel(spikes)    j=ceil(spikes(iSpike)*sr);    pulse_train(j)=pulse_train(j)+1;endif ~isempty(kernel)    pulse_train=conv(pulse_train,kernel);end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if nargout==0    disp('spike_to_pulse: no output requested, plot');    t=linspace(0, spikes(11), round(sr*spikes(11)));    if isempty(kernel)        plot(t, pulse_train(1:numel(t)), '.-'); ylim([0 1.5]);    else        plot(t, pulse_train(1:numel(t))); ylim([0 1.5]);    end    xlabel('time (s)'); title('first 10 pulses');    clear pulse_trainendend % function% test/example codefunction testcode    disp('spike_to_pulse test code:')    disp('call spike_poisson, cumsum to spike times, spike_to_pulse');    nspikes=10000;    rate=100;    sr=100000;    kernel=exp(-linspace(0,10,1000));    spikes=cumsum(spike_poisson(nspikes,rate));    figure(1); clf;    subplot 211;    spike_to_pulse(spikes,sr);    subplot 212    spike_to_pulse(spikes,sr,kernel);    title('with kernel')    end % function